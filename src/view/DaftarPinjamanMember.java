/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import service.DatabaseConnection;

/**
 *
 * @author delll
 */
public class DaftarPinjamanMember extends javax.swing.JPanel {

    /**
     * Creates new form DaftarPinjamanMember
     */
    public DaftarPinjamanMember() {
        initComponents();
        jTable1.setModel(getTableModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1046, 661));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Harry Potter And The Sorcerer's Stone", "Harry James", "1998"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Judul Buku", "Pengarang", "Tahun Terbit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(303, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
public DefaultTableModel getTableModel() {
        DefaultTableModel model = new DefaultTableModel();

        // Add columns to model
        model.addColumn("ID Buku");
        model.addColumn("Judul");
        model.addColumn("Penulis");
        model.addColumn("Kategori");
        model.addColumn("Deskripsi");
        model.addColumn("Tahun Terbit");
        model.addColumn("Stok");

        DatabaseConnection db = null;
        try  {
            db = new DatabaseConnection();
            Statement stmt = DatabaseConnection.conn.createStatement();
            String query = "SELECT B.id_buku, B.Judul, "
                    + "GROUP_CONCAT(P.Nama ORDER BY P.Nama SEPARATOR ', ') AS Penulis, "
                    + "GROUP_CONCAT(K.Nama_kategori ORDER BY K.Nama_kategori SEPARATOR ', ') AS Kategori, "
                    + "B.Deskripsi, B.Tahun_terbit, B.Stok "
                    + "FROM Buku B "
                    + "LEFT JOIN Penulis_Buku PB ON B.id_buku = PB.id_buku "
                    + "LEFT JOIN Penulis P ON PB.id_penulis = P.id_penulis "
                    + "LEFT JOIN Kategori_Buku KB ON B.id_buku = KB.id_buku "
                    + "LEFT JOIN Kategori K ON KB.id_kategori = K.id_kategori "
                    + "GROUP BY B.id_buku, B.Judul, B.Deskripsi, B.Tahun_terbit, B.Stok";
            ResultSet resultSet = stmt.executeQuery(query);

            // Iterate through result set and add rows to model
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("id_buku"),
                    resultSet.getString("Judul"),
                    resultSet.getString("Penulis"),
                    resultSet.getString("Kategori"),
                    resultSet.getString("Deskripsi"),
                    resultSet.getInt("Tahun_terbit"),
                    resultSet.getInt("Stok")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return model;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
